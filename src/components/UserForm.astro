---
import {
  grados,
  roles,
  guardias,
  destinos,
  comentarios,
} from '../data/options';
---

<div class="feedback-form">
  <form
    name="registro-usuarios"
    id="registro-usuarios"
    method="POST"
    data-netlify="true"
    netlify-honeypot="bot-field"
    class="feedback-form"
    action="/success"
  >
    <input type="hidden" name="form-name" value="registro-usuarios" />

    <!-- Campo Honeypot -->
    <p class="hidden">
      <label>No llenar este campo: <input name="bot-field" /></label>
    </p>

    <!-- Nombre Completo -->
    <div class="form-group">
      <label for="nombres"
        >Nombre Completo <span class="required">*</span></label
      >
      <input type="text" id="nombres" name="Nombres" required />
    </div>

    <!-- NIP -->
    <div class="form-group">
      <label for="nip">NIP <span class="required">*</span></label>
      <input
        type="number"
        id="nip"
        name="Nip"
        placeholder="ejemplo 17345"
        required
      />
    </div>

    <!-- Grado / Rango -->
    <div class="form-group">
      <label for="grado">Grado / Rango <span class="required">*</span></label>
      <select id="grado" name="Grado_Rango" required>
        <option value="" disabled selected>Seleccione un grado</option>
        {grados.map((grado) => <option value={grado}>{grado}</option>)}
      </select>
    </div>

    <!-- Rol -->
    <div class="form-group">
      <label for="rol">Rol <span class="required">*</span></label>
      <select id="rol" name="ROL" required>
        <option value="" disabled selected>Seleccione un Rol</option>
        {roles.map((rol) => <option value={rol}>{rol}</option>)}
      </select>
    </div>

    <!-- Usuario -->
    <div class="form-group">
      <label for="usuariorap">Usuario RAP</label>
      <input type="text" id="usuariorap" name="Usuariorap" placeholder="ejemplo luis.ramirez" />
    </div>

    <!-- Guardia -->
    <div class="form-group">
      <label for="guardia">Guardia a la que pertenece</label>
      <div class="radio-group">
        {
          guardias.map((guardia) => (
            <div class="radio-item">
              <input type="radio" id={guardia} name="Guardia" value={guardia} />
              <label for={guardia} class="radio-label">
                {guardia}
              </label>
            </div>
          ))
        }
      </div>
    </div>

    <!-- Destino -->
    <div class="form-group">
      <label for="destino">Destino <span class="required">*</span></label>
      <select id="destino" name="Destino" required>
        <option value="" disabled selected>Seleccione un Destino</option>
        {destinos.map((destino) => <option value={destino}>{destino}</option>)}
      </select>
    </div>

    <!-- Subdestino -->
    <div class="form-group">
      <label for="subdestino"
        >SubDestino 
      </label>(Estacion / Subestación / Delegación)
      <select id="subdestino" name="Subdestino">
        <option value="" disabled selected>Seleccione un subdestino</option>
        <!-- Opciones se insertan dinámicamente -->
      </select>
    </div>

    <!-- Telefono -->
    <div class="form-group">
      <label for="telefono">Número de Teléfono</label>
      <input type="tel" id="telefono" name="Numero_de_Telefono" />
    </div>

    <!--div class="form-group">
      <label for="comentarios">Comentarios o Preguntas</label>
      <textarea id="comentarios" name="Comentarios" rows="3"></textarea>
    </div-->
  
    <!-- Comentarios -->
    <label for="comentario">Opiniones o comentarios</label>
    <div class="form-group">
      <div class="radio-list">
        {
          comentarios.map((comentario) => (
            <div class="radio-item">
              <input type="radio" id={comentario} name="Comentario" value={comentario} />
              <label for={comentario} class="radio-label">
                {comentario}
              </label>
            </div>
          ))
        }
      </div>
    </div>

    <!-- error -->
    <div id="errorMensaje"></div>

    <!-- Aquí aparece el reCAPTCHA -->
  <div data-netlify-recaptcha="true"></div>

    <div style="display: flex; justify-content: center; margin-top: 1rem;">
      <button type="submit">Enviar</button>
    </div>
  </form>
</div>

<style>
  .feedback-form {
    max-width: 600px;
    margin: auto;
    padding: 1rem;
    display: grid;
    gap: 1rem;
    font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
  }

  label {
    font-weight: bold;
    margin-bottom: 0.5rem;
  }

  label .required {
    color: red;
    font-weight: bold;
    margin-left: 4px;
  }

  input,
  textarea,
  button {
    border-radius: 5px;
    border: 1px solid #cbd5e1;
    font-size: inherit;
    margin: 15px 0;
    padding: 12px 20px;
    width: 100%;
  }

  button {
    background-color: #2bdcd2;
    border: 1px solid #2bdcd2;
    color: #1e293b;
    font-size: 16px;
    width: 50%;
  }

  .hidden {
    clip: rect(0 0 0 0);
    clip-path: inset(50%);
    height: 1px;
    overflow: hidden;
    position: absolute;
    white-space: nowrap;
    width: 1px;
    display: none;
  }

  input[type='text'],
  input[type='number'],
  input[type='tel'],
  input[type='email'],
  textarea,
  select {
    border: 1px solid #cbd5e1;
    /* color inicial */
    border-radius: 6px;
    padding: 12px 20px;
    font-size: 1rem;
    width: 100%;
    transition: border-color 0.3s ease;
  }

  /* Al hacer clic o enfocar el campo */
  input[type='text']:focus,
  input[type='number']:focus,
  input[type='tel']:focus,
  input[type='email']:focus,
  textarea:focus,
  select:focus {
    border-color: #007bff;
    /* azul */
    outline: none;
  }

  .radio-group {
    display: flex;
    gap: 20px;
    margin: 15px 0;
  }

  .radio-item {
    display: flex;
    align-items: center;
  }

  input[type='radio'] {
    width: auto;
    margin: 0 8px 0 0;
  }

  .radio-label {
    margin: 0;
  }

  .radio-list {
    display: flex;
    flex-direction: column;
    gap: 10px;
    margin: 15px 0;
  }

  @media (max-width: 600px) {
    .feedback-form {
      padding: 1rem;
    }

    select {
      font-size: 1rem;
    }
  }

  #errorMensaje {
    color: rgb(250, 245, 245);
    margin-top: 10px;
  }

  /* Estilo para los mensajes de error */
  .alert-error {
    padding: 15px;
    background-color: #c46a6a;
    color: rgb(8, 1, 1);
    border-radius: 5px;
    margin-bottom: 20px;
    font-size: 1rem;
    display: none; /* Se oculta inicialmente */
  }

  .alert-error ul {
    margin: 0;
    padding-left: 20px;
  }

  .alert-error ul li {
    list-style-type: disc;
  }
</style>

<script type="module">
  import { subdestinos } from '/assets/data/sub_destinos.js';

  //const subdestinosData = JSON.parse(JSON.stringify(subdestinos));

  const destinoSelect = document.getElementById('destino');
  const subdestinoSelect = document.getElementById('subdestino');
  const formulario = document.getElementById('registro-usuarios');
  const nip = document.querySelector('#nip');
  const errorMensaje = document.getElementById('errorMensaje');
  const telefono = document.getElementById('telefono');

  destinoSelect.addEventListener('change', updateSubdestinos);

  function updateSubdestinos() {
    const selectedDestino = destinoSelect.value;
    subdestinoSelect.innerHTML =
      '<option value="" disabled selected>Seleccione un Subdestino</option>';

    if (subdestinos[selectedDestino]) {
      subdestinos[selectedDestino].forEach((subdestino) => {
        const option = document.createElement('option');
        option.value = subdestino;
        option.textContent = subdestino;
        subdestinoSelect.appendChild(option);
      });
      subdestinoSelect.disabled = false;
    } else {
      const option = document.createElement('option');
      option.value = '';
      option.textContent = 'No hay subdestinos';
      subdestinoSelect.appendChild(option);
      subdestinoSelect.disabled = true;
    }
  }

  document.addEventListener('DOMContentLoaded', () => {
    subdestinoSelect.disabled = true;
  });

  formulario.addEventListener('submit', function (e) {
    //e.preventDefault();
    errorMensaje.innerHTML = ''; // Limpiar mensajes de error previos
    errorMensaje.classList.remove('alert-error'); // Limpiar clase antes de validar
    errorMensaje.style.display = 'none';

    const errorList = [];

    const nipRegex = /^[0-9]{4,5}$/;
    if (nip && !nipRegex.test(nip.value)) {
      errorList.push('Ingrese un número de NIP válido, ejemplo 17345');
      e.preventDefault();
    }

    const telefonoValor = telefono.value.trim();
    if (telefonoValor !== '') {
      const telefonoRegex = /^[0-9]{8}$/;
      if (!telefonoRegex.test(telefonoValor)) {
        errorList.push('Ingrese un número de teléfono válido (8 dígitos).');
        e.preventDefault(); // Prevenir el envío si hay errores
      }
    }

    if (errorList.length > 0) {
      // Mostrar el contenedor de errores
      errorMensaje.classList.add('alert-error');
      errorMensaje.innerHTML =
        '<ul>' +
        errorList.map((error) => `<li>${error}</li>`).join('') +
        '</ul>';
      errorMensaje.style.display = 'block'; // Mostrar el contenedor de errores
      return false; // Detener el envío del formulario
    }

    //formulario.reset();

    //window.location.href = '/success';
  });
</script>
