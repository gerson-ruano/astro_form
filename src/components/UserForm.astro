---
import {
  grados,
  roles,
  guardias,
  destinos,
  subdestinos,
} from '../data/options.ts';
const selectedDestino = Astro.props.selectedDestino || destinos[0];
const subdestinoOptions = subdestinos[selectedDestino] || [];
---

<div class="feedback-form">
  <form
    name="registro-usuarios"
    method="POST"
    data-netlify="true"
    netlify-honeypot="bot-field"
    class="feedback-form"
  >
    <input type="hidden" name="form-name" value="registro-usuarios" />
    <input type="hidden" name="bot-field" />

    <label for="nombres">Nombre Completo</label>
    <input type="text" id="nombres" name="Nombres" required />

    <label for="nip">NIP</label>
    <input type="number" id="nip" name="Nip" required pattern="^\d{4,5}$" />

    <!-- Grado / Rango -->
    <label for="grado">Grado / Rango</label>
    <select id="grado" name="Grado_Rango" required>
      <option value="" disabled selected>Seleccione un grado</option>
      {
        grados.map((grado) => (
          <option value={grado}>{grado}</option>
        ))
      }
    </select>

    <!-- Rol -->
    <label for="rol">Rol</label>
    <select id="rol" name="ROL" required>
      <option value="" disabled selected>Seleccione un Rol</option>
      {
        roles.map((rol) => (
          <option value={rol}>{rol}</option>
        ))
      }
    </select>

    <label for="usuariorap">Usuario RAP</label>
    <input type="text" id="usuariorap" name="Usuariorap" />

    <label for="guardia">Guardia</label>
    <div class="radio-group">
      {
        guardias.map((guardia) => (
          <div class="radio-item">
            <input
              type="radio"
              id={guardia}
              name="Guardia"
              value={guardia}
            />
            <label for={guardia} class="radio-label">
              {guardia}
            </label>
          </div>
        ))
      }
    </div>

    <!-- Destino -->
    <label for="destino">Destino</label>
    <select id="destino" name="Destino" required>
      <option value="" disabled selected>Seleccione un Destino</option>
      {
        destinos.map((destino) => (
          <option value={destino}>{destino}</option>
        ))
      }
    </select>

    <!-- Subdestino -->
    <label for="subdestino">Subdestino</label>
    <select id="subdestino" name="Subdestino" required>
      <option value="" disabled selected>Seleccione un Subdestino</option>
    </select>

    <label for="telefono">Numero de Teléfono</label>
    <input type="tel" id="telefono" name="Numero_de_Telefono" required />

    <label for="comentarios">Comentarios o Preguntas</label>
    <textarea id="comentarios" name="Comentarios" rows="3"></textarea>

    <button type="submit">Enviar</button>
  </form>
</div>

<style>
  .feedback-form {
    margin: 40px 40px;
    min-width: 250px;
    width: 45%;
  }
  label {
    font-size: 16px;
  }
  input,
  textarea,
  button {
    border-radius: 5px;
    border: 1px solid #cbd5e1;
    font-size: inherit;
    margin: 15px 0;
    padding: 12px 20px;
    width: 100%;
  }
  button {
    background-color: #2bdcd2;
    border: 1px solid #2bdcd2;
    color: #1e293b;
    font-size: 16px;
    width: 50%;
  }
  .hidden {
    clip: rect(0 0 0 0);
    clip-path: inset(50%);
    height: 1px;
    overflow: hidden;
    position: absolute;
    white-space: nowrap;
    width: 1px;
  }

  select {
    border-radius: 5px;
    border: 1px solid #cbd5e1;
    font-size: inherit;
    margin: 15px 0;
    padding: 12px 20px;
    width: 100%;
  }
  
  .radio-group {
    display: flex;
    gap: 20px;
    margin: 15px 0;
  }
  
  .radio-item {
    display: flex;
    align-items: center;
  }
  
  input[type="radio"] {
    width: auto;
    margin: 0 8px 0 0;
  }
  
  .radio-label {
    margin: 0;
  }
</style>

<script>
  // Get the form elements
  const destinoSelect = document.getElementById('destino');
  const subdestinoSelect = document.getElementById('subdestino');
  
  // Define the subdestinos mapping
  const subdestinos = {
    "Comisaría 11": ["Huehuetenango", "Quiché"],
    "Comisaría 12": ["Escuintla", "Santa Rosa"],
    "Comisaría 13": ["Ciudad Capital", "Mixco"],
    // Add the rest of your subdestinos here
  };
  
  // Add event listener to the destino select
  destinoSelect.addEventListener('change', updateSubdestinos);
  
  // Function to update subdestinos based on selected destino
  function updateSubdestinos() {
    const selectedDestino = destinoSelect.value;
    
    // Clear current options
    subdestinoSelect.innerHTML = '<option value="" disabled selected>Seleccione un Subdestino</option>';
    
    // If there are subdestinos for the selected destino, add them
    if (subdestinos[selectedDestino]) {
      subdestinos[selectedDestino].forEach(subdestino => {
        const option = document.createElement('option');
        option.value = subdestino;
        option.textContent = subdestino;
        subdestinoSelect.appendChild(option);
      });
      subdestinoSelect.disabled = false;
    } else {
      // If no subdestinos exist for this destino
      const option = document.createElement('option');
      option.value = "No hay subdestinos";
      option.textContent = "No hay subdestinos";
      subdestinoSelect.appendChild(option);
    }
  }
  
  // Initialize subdestinos on page load
  document.addEventListener('DOMContentLoaded', updateSubdestinos);
</script>
